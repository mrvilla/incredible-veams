@charset "UTF-8";
/// Neatâ€™s default grid.
///
/// @group settings
///
/// @type map
///
/// @name Default settings
///
/// @property {number (unitless)} columns [12]
///   Default number of the total grid columns.
///
/// @property {number (with unit)} gutter [20px]
///   Default grid gutter width between columns.
///
/// @property {string | number (with unit)} gutter [null]
///   Grid media query.
///
/// @property {color} color [rgba(#00d4ff, 0.25)]
///   Default visual grid color.
///
/// @access private

$_neat-grid-defaults: (
  columns: 12,
  gutter: 20px,
  media: null,
  color: rgba(#00d4ff, 0.25),
  direction: ltr,
);

/// This variable is a sass map that overrides Neat's default grid settings.
/// Use this to define your project's grid properties incluting gutters and
/// total column count.
///
/// @type map
///
/// @group settings
///
/// @name Neat grid
///
/// @property {number (unitless)} columns [12]
///   Number of the total grid columns.
///
/// @property {number (with unit)} gutter [20px]
///   Grid gutter width between columns.
///
/// @example scss
///   $neat-grid: (
///     columns: 12,
///     gutter: 20px,
///   );

$neat-grid: () !default;

/// If you would like to have multiple grids in a single project, you can do
/// this by defining a new map stored within a variable of your choosing. This
/// variable can then be passed directly in to any of Neat's mixins like
/// [`grid-span(12, $my-custom-grid)`](#grid-span).
///
/// Custom grids are especially useful with [`grid-media`](#grid-media). By
/// defining a `media` attribute within your custom grid, you are able to easily
/// define both the attributes of a grid as well as at what breakpoint this grid
/// should activate.
///
/// @type map
///
/// @group settings
///
/// @name Custom grids
///
/// @see {mixin} Grid media
///
/// @property {number (unitless)} columns [12]
///   Number of the total grid columns.
///
/// @property {number (with unit)} gutter [20px]
///   Grid gutter width between columns.
///
/// @property {number (with unit) | string | null} media [null]
///   The `@media` definition that is used by the [`grid-media`](#grid-media)
///   mixin to detirmine the media properties.
///
/// @example scss
///   $my-custom-grid: (
///     columns: 12,
///     gutter: 20px,
///     media: 1200px,
///   );
///
///   $other-custom-grid-for-print: (
///     columns: 14,
///     gutter: 1.5rem,
///     media: print,
///   );
///

$neat-custom-grid: () !default;
